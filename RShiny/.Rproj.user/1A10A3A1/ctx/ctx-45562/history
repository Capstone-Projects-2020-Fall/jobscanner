install
reticulate::repl_python()
library(reticulate)
use_virtualenv("r-reticulate")
use_python("/usr/local/bin/python3.7")
import pandas
use_python("/usr/local/bin/python3.7")
import pandas
reticulate::repl_python()
install.packages(c("magrittr", "RcppArmadillo", "rprojroot", "tm", "tune"))
library(reticulate)
py_install("pandas")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("reticulate")
library(reticulate)
py_available()
py_discover_config()
debug(py_available)
py_available(initialize = TRUE)
ensure_python_initialized()
Sys.setenv(RETICULATE_PYTHON = '~/miniconda3/bin/python')
Sys.setenv(RETICULATE_PYTHON = '~/miniconda3/bin/python')
Sys.setenv(RETICULATE_MINICONDA_PATH = '~/miniconda3/')
library(reticulate)
library(rprojroot)
use_python(python = conda_python())
use_condaenv(condaenv = 'r-reticulate', required = TRUE)
conda_list()
reticulate:::miniconda_meta_path()
use_miniconda()
reticulate::install_miniconda()
reticulate::install_miniconda()
reticulate::install_miniconda()
conda update -c defaults python
library(devtools)
library(reticulate)
use_python("/usr/bin/python")
py_config()
py_install("pandas")
Sys.setenv(RETICULATE_PYTHON = "/usr/bin/python")
library(reticulate)
py_config()
shiny::runApp()
install.packages("shinydashboard")
runApp()
install.packages("dplyr")
install.packages("dplyr")
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
library(rsconnect)
shiny::runApp()
shiny::runApp()
install.packages("shiny")
install.packages("shiny")
install.packages("shinydashboard")
shiny::runApp()
library(conflicted)
installed.packages("conflicted")
remove.packages("packrat")
install.packages("packrat")
install.packages("shiny")
